// TODO: This file was created by bulk-decaffeinate.
// Sanity-check the conversion and remove this comment.
/*
 * decaffeinate suggestions:
 * DS102: Remove unnecessary code created because of implicit returns
 * Full docs: https://github.com/decaffeinate/decaffeinate/blob/master/docs/suggestions.md
 */
// Generated by https://pagedraw.io/pages/5249
let Demobutton;
import React from 'react';
import createReactClass from 'create-react-class';

export default Demobutton = createReactClass({
    displayName: 'Demobutton',
    render() {
        return React.createElement("div", {"style": ({"display": "flex", "flexGrow": "1"})},
          React.createElement("style", {"dangerouslySetInnerHTML": ({__html: `\
@import url('https://fonts.googleapis.com/css?family=Lato:');

* {
    box-sizing: border-box;
}

body {
    margin: 0;
}

button:hover {
    cursor: pointer;
}

a {
    text-decoration: none;
    color: inherit;
}

.pd-onhover-parent >.pd-onhover {
    display: none;
}

.pd-onhover-parent:hover > * {
    display: none;
}

.pd-onhover-parent:hover > .pd-onhover {
    display: flex;
}

.pd-onactive-parent > .pd-onactive {
    display: none;
}

.pd-onactive-parent:active > * {
    display: none;
}

.pd-onactive-parent:active > .pd-onactive {
    display: flex;
}

.pd-onactive-parent.pd-onhover-parent:active > .pd-onhover {
    display: none;
}\
`})}),  
          ( ((this.props.selected ? 'selected' : 'unselected') === "selected") ?
              React.createElement("div", {"style": ({"display": "flex", "flexDirection": "column", "flexGrow": "1"})},
                  React.createElement("div", {"style": ({"display": "flex", "flexShrink": "0"})},
                      React.createElement("div", {"style": ({"display": "flex", "flexDirection": "column", "flexGrow": "1", "flexBasis": 0, "minHeight": "fit-content", "paddingTop": 4, "paddingBottom": 5, "borderRadius": 100, "background": "rgb(88, 88, 115)"})},
                          React.createElement("div", {"style": ({"display": "flex", "flexShrink": "0", "paddingRight": 4})},
                              React.createElement("div", {"style": ({"flexGrow": "1", "flexBasis": 0, "fontFamily": "\"Lato\", sans-serif", "color": "rgb(255, 255, 255)", "fontSize": 12, "lineHeight": "normal", "letterSpacing": 0.4615385, "fontWeight": "bold", "fontStyle": "normal", "textDecoration": "none", "textAlign": "center", "wordWrap": "break-word"})},
                                  ( this.props.content )
                              )
                          )
                      )
                  )
              ) : undefined
          ),
          ( ((this.props.selected ? 'selected' : 'unselected') === "unselected") ?
              React.createElement("div", {"style": ({"display": "flex", "flexDirection": "column", "paddingTop": 4, "paddingBottom": 5, "flexGrow": "1"})},
                  React.createElement("div", {"style": ({"display": "flex", "flexShrink": "0", "paddingRight": 4})},
                      React.createElement("div", {"style": ({"flexGrow": "1", "flexBasis": 0, "fontFamily": "\"Lato\", sans-serif", "color": "rgba(0, 0, 31, 0.5)", "fontSize": 12, "lineHeight": "normal", "letterSpacing": 0.4615385, "fontWeight": "bold", "fontStyle": "normal", "textDecoration": "none", "textAlign": "center", "wordWrap": "break-word"})},
                          ( this.props.content )
                      )
                  )
              ) : undefined
          )
      );
    }
});
